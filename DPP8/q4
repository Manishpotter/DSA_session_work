class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool dfs(int vertex,int par,vector<int> adj[],vector<bool>&vis){
        vis[vertex]=true;
        bool isLoop=false;
        for(auto &child : adj[vertex]){
            if(vis[child] && child==par) continue;
            if(vis[child]) return true;
            isLoop|=dfs(child,vertex,adj,vis);
        }
        return isLoop;
    }
    bool isCycle(int V, vector<int> adj[]) {
        // Code here
        vector<bool> vis(V,false);
        bool isLoop=false;
        for(int i=0 ; i<V ; i++){
            if(!vis[i]){
               if(dfs(i,-1,adj,vis)){
                   isLoop=true;
                   break;
               }
            }
        }
        return isLoop;
    }
};
